
import java.awt.Color;
import java.awt.Graphics;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Kuznetsov Sergey
 */
public class CharTile extends javax.swing.JPanel {
    
    static final Color PALE_BLUE = new Color(150, 150, 250);
    static final Color PALE_GREEN = new Color(150, 250, 150);
    static final Color TRANSPARENT_GRAY = new Color(150, 150, 160, 150);
    
    EditorPanel editorPanel;
    int symbolIndex;

    @Override
    public void paintComponent(Graphics g) {
        g.setColor(Color.lightGray);
        stateLabel.setText(" ");
        if (editorPanel.symbolCode == symbolIndex) {
            stateLabel.setText("In edit");
            g.setColor(PALE_BLUE);
        }
        if (editorPanel.backgroundSymbolCode == symbolIndex) {
            stateLabel.setText("Backgound");
            g.setColor(PALE_GREEN);
        }
        g.fillRect(2, 2, getWidth() - 4, getHeight() - 4);
        if (editorPanel.selectedSymbol == symbolIndex) {
            g.setColor(TRANSPARENT_GRAY);
            g.fillRect(2, 2, getWidth() - 4, getHeight() - 4);
        }
        g.setColor(Color.black);
        int a = getHeight() - 16;
        g.drawRect(getWidth() - a - 8, 8, a - 1, a - 1);
        g.drawImage(editorPanel.font.getImageOfSymbol(symbolIndex), getWidth() - a - 8 + 1, 8 + 1, a - 2, a - 2, null);
        if (editorPanel.symbolCode == symbolIndex) paintBorder(g);
    }
    
    /**
     * Creates new form CharTile
     */
    public CharTile(EditorPanel editorPanel, int symbolIndex) {
        this.editorPanel = editorPanel;
        this.symbolIndex = symbolIndex;
        initComponents();
        codeValueLabel.setText(symbolIndex + " (0x" + Integer.toHexString(symbolIndex).toUpperCase() + ")");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        codeLabel = new javax.swing.JLabel();
        codeValueLabel = new javax.swing.JLabel();
        stateLabel = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setMaximumSize(new java.awt.Dimension(230, 55));
        setMinimumSize(new java.awt.Dimension(230, 55));
        setPreferredSize(new java.awt.Dimension(230, 55));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        codeLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        codeLabel.setText("Code:");

        codeValueLabel.setText("---");

        stateLabel.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        stateLabel.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(codeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(codeValueLabel))
                    .addComponent(stateLabel))
                .addContainerGap(163, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codeLabel)
                    .addComponent(codeValueLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stateLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        int p = editorPanel.selectedSymbol;
        editorPanel.selectedSymbol = symbolIndex;
        repaint();
        editorPanel.tiles[p].repaint();
    }//GEN-LAST:event_formMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel codeLabel;
    private javax.swing.JLabel codeValueLabel;
    private javax.swing.JLabel stateLabel;
    // End of variables declaration//GEN-END:variables
}
